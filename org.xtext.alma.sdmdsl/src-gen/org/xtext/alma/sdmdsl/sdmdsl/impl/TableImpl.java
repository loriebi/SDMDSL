/**
 * generated by Xtext 2.9.1
 */
package org.xtext.alma.sdmdsl.sdmdsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.alma.sdmdsl.sdmdsl.Field;
import org.xtext.alma.sdmdsl.sdmdsl.GlobalField;
import org.xtext.alma.sdmdsl.sdmdsl.SdmdslPackage;
import org.xtext.alma.sdmdsl.sdmdsl.Table;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Table</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getDoc <em>Doc</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#isKeyLevel <em>Key Level</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getKeyData <em>Key Data</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#isReqLevel <em>Req Level</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getReqData <em>Req Data</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#isOptLevel <em>Opt Level</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getOptData <em>Opt Data</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#isGlobalLevel <em>Global Level</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.TableImpl#getGlobalData <em>Global Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TableImpl extends MinimalEObjectImpl.Container implements Table
{
  /**
   * The default value of the '{@link #getDoc() <em>Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoc()
   * @generated
   * @ordered
   */
  protected static final String DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDoc() <em>Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoc()
   * @generated
   * @ordered
   */
  protected String doc = DOC_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isKeyLevel() <em>Key Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKeyLevel()
   * @generated
   * @ordered
   */
  protected static final boolean KEY_LEVEL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isKeyLevel() <em>Key Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isKeyLevel()
   * @generated
   * @ordered
   */
  protected boolean keyLevel = KEY_LEVEL_EDEFAULT;

  /**
   * The cached value of the '{@link #getKeyData() <em>Key Data</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyData()
   * @generated
   * @ordered
   */
  protected EList<Field> keyData;

  /**
   * The default value of the '{@link #isReqLevel() <em>Req Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReqLevel()
   * @generated
   * @ordered
   */
  protected static final boolean REQ_LEVEL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isReqLevel() <em>Req Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReqLevel()
   * @generated
   * @ordered
   */
  protected boolean reqLevel = REQ_LEVEL_EDEFAULT;

  /**
   * The cached value of the '{@link #getReqData() <em>Req Data</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqData()
   * @generated
   * @ordered
   */
  protected EList<Field> reqData;

  /**
   * The default value of the '{@link #isOptLevel() <em>Opt Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptLevel()
   * @generated
   * @ordered
   */
  protected static final boolean OPT_LEVEL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOptLevel() <em>Opt Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptLevel()
   * @generated
   * @ordered
   */
  protected boolean optLevel = OPT_LEVEL_EDEFAULT;

  /**
   * The cached value of the '{@link #getOptData() <em>Opt Data</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOptData()
   * @generated
   * @ordered
   */
  protected EList<Field> optData;

  /**
   * The default value of the '{@link #isGlobalLevel() <em>Global Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGlobalLevel()
   * @generated
   * @ordered
   */
  protected static final boolean GLOBAL_LEVEL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isGlobalLevel() <em>Global Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isGlobalLevel()
   * @generated
   * @ordered
   */
  protected boolean globalLevel = GLOBAL_LEVEL_EDEFAULT;

  /**
   * The cached value of the '{@link #getGlobalData() <em>Global Data</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlobalData()
   * @generated
   * @ordered
   */
  protected EList<GlobalField> globalData;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SdmdslPackage.Literals.TABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDoc()
  {
    return doc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDoc(String newDoc)
  {
    String oldDoc = doc;
    doc = newDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__DOC, oldDoc, doc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isKeyLevel()
  {
    return keyLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKeyLevel(boolean newKeyLevel)
  {
    boolean oldKeyLevel = keyLevel;
    keyLevel = newKeyLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__KEY_LEVEL, oldKeyLevel, keyLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Field> getKeyData()
  {
    if (keyData == null)
    {
      keyData = new EObjectContainmentEList<Field>(Field.class, this, SdmdslPackage.TABLE__KEY_DATA);
    }
    return keyData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isReqLevel()
  {
    return reqLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReqLevel(boolean newReqLevel)
  {
    boolean oldReqLevel = reqLevel;
    reqLevel = newReqLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__REQ_LEVEL, oldReqLevel, reqLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Field> getReqData()
  {
    if (reqData == null)
    {
      reqData = new EObjectContainmentEList<Field>(Field.class, this, SdmdslPackage.TABLE__REQ_DATA);
    }
    return reqData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOptLevel()
  {
    return optLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOptLevel(boolean newOptLevel)
  {
    boolean oldOptLevel = optLevel;
    optLevel = newOptLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__OPT_LEVEL, oldOptLevel, optLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Field> getOptData()
  {
    if (optData == null)
    {
      optData = new EObjectContainmentEList<Field>(Field.class, this, SdmdslPackage.TABLE__OPT_DATA);
    }
    return optData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isGlobalLevel()
  {
    return globalLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGlobalLevel(boolean newGlobalLevel)
  {
    boolean oldGlobalLevel = globalLevel;
    globalLevel = newGlobalLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.TABLE__GLOBAL_LEVEL, oldGlobalLevel, globalLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<GlobalField> getGlobalData()
  {
    if (globalData == null)
    {
      globalData = new EObjectContainmentEList<GlobalField>(GlobalField.class, this, SdmdslPackage.TABLE__GLOBAL_DATA);
    }
    return globalData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SdmdslPackage.TABLE__KEY_DATA:
        return ((InternalEList<?>)getKeyData()).basicRemove(otherEnd, msgs);
      case SdmdslPackage.TABLE__REQ_DATA:
        return ((InternalEList<?>)getReqData()).basicRemove(otherEnd, msgs);
      case SdmdslPackage.TABLE__OPT_DATA:
        return ((InternalEList<?>)getOptData()).basicRemove(otherEnd, msgs);
      case SdmdslPackage.TABLE__GLOBAL_DATA:
        return ((InternalEList<?>)getGlobalData()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SdmdslPackage.TABLE__DOC:
        return getDoc();
      case SdmdslPackage.TABLE__NAME:
        return getName();
      case SdmdslPackage.TABLE__KEY_LEVEL:
        return isKeyLevel();
      case SdmdslPackage.TABLE__KEY_DATA:
        return getKeyData();
      case SdmdslPackage.TABLE__REQ_LEVEL:
        return isReqLevel();
      case SdmdslPackage.TABLE__REQ_DATA:
        return getReqData();
      case SdmdslPackage.TABLE__OPT_LEVEL:
        return isOptLevel();
      case SdmdslPackage.TABLE__OPT_DATA:
        return getOptData();
      case SdmdslPackage.TABLE__GLOBAL_LEVEL:
        return isGlobalLevel();
      case SdmdslPackage.TABLE__GLOBAL_DATA:
        return getGlobalData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SdmdslPackage.TABLE__DOC:
        setDoc((String)newValue);
        return;
      case SdmdslPackage.TABLE__NAME:
        setName((String)newValue);
        return;
      case SdmdslPackage.TABLE__KEY_LEVEL:
        setKeyLevel((Boolean)newValue);
        return;
      case SdmdslPackage.TABLE__KEY_DATA:
        getKeyData().clear();
        getKeyData().addAll((Collection<? extends Field>)newValue);
        return;
      case SdmdslPackage.TABLE__REQ_LEVEL:
        setReqLevel((Boolean)newValue);
        return;
      case SdmdslPackage.TABLE__REQ_DATA:
        getReqData().clear();
        getReqData().addAll((Collection<? extends Field>)newValue);
        return;
      case SdmdslPackage.TABLE__OPT_LEVEL:
        setOptLevel((Boolean)newValue);
        return;
      case SdmdslPackage.TABLE__OPT_DATA:
        getOptData().clear();
        getOptData().addAll((Collection<? extends Field>)newValue);
        return;
      case SdmdslPackage.TABLE__GLOBAL_LEVEL:
        setGlobalLevel((Boolean)newValue);
        return;
      case SdmdslPackage.TABLE__GLOBAL_DATA:
        getGlobalData().clear();
        getGlobalData().addAll((Collection<? extends GlobalField>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SdmdslPackage.TABLE__DOC:
        setDoc(DOC_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__KEY_LEVEL:
        setKeyLevel(KEY_LEVEL_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__KEY_DATA:
        getKeyData().clear();
        return;
      case SdmdslPackage.TABLE__REQ_LEVEL:
        setReqLevel(REQ_LEVEL_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__REQ_DATA:
        getReqData().clear();
        return;
      case SdmdslPackage.TABLE__OPT_LEVEL:
        setOptLevel(OPT_LEVEL_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__OPT_DATA:
        getOptData().clear();
        return;
      case SdmdslPackage.TABLE__GLOBAL_LEVEL:
        setGlobalLevel(GLOBAL_LEVEL_EDEFAULT);
        return;
      case SdmdslPackage.TABLE__GLOBAL_DATA:
        getGlobalData().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SdmdslPackage.TABLE__DOC:
        return DOC_EDEFAULT == null ? doc != null : !DOC_EDEFAULT.equals(doc);
      case SdmdslPackage.TABLE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SdmdslPackage.TABLE__KEY_LEVEL:
        return keyLevel != KEY_LEVEL_EDEFAULT;
      case SdmdslPackage.TABLE__KEY_DATA:
        return keyData != null && !keyData.isEmpty();
      case SdmdslPackage.TABLE__REQ_LEVEL:
        return reqLevel != REQ_LEVEL_EDEFAULT;
      case SdmdslPackage.TABLE__REQ_DATA:
        return reqData != null && !reqData.isEmpty();
      case SdmdslPackage.TABLE__OPT_LEVEL:
        return optLevel != OPT_LEVEL_EDEFAULT;
      case SdmdslPackage.TABLE__OPT_DATA:
        return optData != null && !optData.isEmpty();
      case SdmdslPackage.TABLE__GLOBAL_LEVEL:
        return globalLevel != GLOBAL_LEVEL_EDEFAULT;
      case SdmdslPackage.TABLE__GLOBAL_DATA:
        return globalData != null && !globalData.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (doc: ");
    result.append(doc);
    result.append(", name: ");
    result.append(name);
    result.append(", keyLevel: ");
    result.append(keyLevel);
    result.append(", reqLevel: ");
    result.append(reqLevel);
    result.append(", optLevel: ");
    result.append(optLevel);
    result.append(", globalLevel: ");
    result.append(globalLevel);
    result.append(')');
    return result.toString();
  }

} //TableImpl
