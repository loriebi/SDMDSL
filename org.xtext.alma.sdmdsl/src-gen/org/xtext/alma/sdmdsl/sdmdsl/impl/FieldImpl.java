/**
 * generated by Xtext 2.9.1
 */
package org.xtext.alma.sdmdsl.sdmdsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.alma.enumeration.enumeration.EnumType;

import org.xtext.alma.sdmdsl.sdmdsl.Dimensions;
import org.xtext.alma.sdmdsl.sdmdsl.Field;
import org.xtext.alma.sdmdsl.sdmdsl.SdmdslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getPrimitiveType <em>Primitive Type</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getEnumeration <em>Enumeration</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getScalar <em>Scalar</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getDataDim <em>Data Dim</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#isAutoIncrementable <em>Auto Incrementable</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#isRefsToAslice <em>Refs To Aslice</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#isRefsToOne <em>Refs To One</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#isRefsToMany <em>Refs To Many</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#isRefsToManySlices <em>Refs To Many Slices</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getRefersTo <em>Refers To</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getRefersTo2 <em>Refers To2</em>}</li>
 *   <li>{@link org.xtext.alma.sdmdsl.sdmdsl.impl.FieldImpl#getDoc <em>Doc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldImpl extends MinimalEObjectImpl.Container implements Field
{
  /**
   * The default value of the '{@link #getPrimitiveType() <em>Primitive Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimitiveType()
   * @generated
   * @ordered
   */
  protected static final String PRIMITIVE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrimitiveType() <em>Primitive Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimitiveType()
   * @generated
   * @ordered
   */
  protected String primitiveType = PRIMITIVE_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getEnumeration() <em>Enumeration</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumeration()
   * @generated
   * @ordered
   */
  protected EnumType enumeration;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getScalar() <em>Scalar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScalar()
   * @generated
   * @ordered
   */
  protected static final String SCALAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScalar() <em>Scalar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScalar()
   * @generated
   * @ordered
   */
  protected String scalar = SCALAR_EDEFAULT;

  /**
   * The cached value of the '{@link #getDataDim() <em>Data Dim</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDim()
   * @generated
   * @ordered
   */
  protected EList<Dimensions> dataDim;

  /**
   * The default value of the '{@link #isAutoIncrementable() <em>Auto Incrementable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAutoIncrementable()
   * @generated
   * @ordered
   */
  protected static final boolean AUTO_INCREMENTABLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAutoIncrementable() <em>Auto Incrementable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAutoIncrementable()
   * @generated
   * @ordered
   */
  protected boolean autoIncrementable = AUTO_INCREMENTABLE_EDEFAULT;

  /**
   * The default value of the '{@link #isRefsToAslice() <em>Refs To Aslice</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToAslice()
   * @generated
   * @ordered
   */
  protected static final boolean REFS_TO_ASLICE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRefsToAslice() <em>Refs To Aslice</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToAslice()
   * @generated
   * @ordered
   */
  protected boolean refsToAslice = REFS_TO_ASLICE_EDEFAULT;

  /**
   * The default value of the '{@link #isRefsToOne() <em>Refs To One</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToOne()
   * @generated
   * @ordered
   */
  protected static final boolean REFS_TO_ONE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRefsToOne() <em>Refs To One</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToOne()
   * @generated
   * @ordered
   */
  protected boolean refsToOne = REFS_TO_ONE_EDEFAULT;

  /**
   * The default value of the '{@link #isRefsToMany() <em>Refs To Many</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToMany()
   * @generated
   * @ordered
   */
  protected static final boolean REFS_TO_MANY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRefsToMany() <em>Refs To Many</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToMany()
   * @generated
   * @ordered
   */
  protected boolean refsToMany = REFS_TO_MANY_EDEFAULT;

  /**
   * The default value of the '{@link #isRefsToManySlices() <em>Refs To Many Slices</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToManySlices()
   * @generated
   * @ordered
   */
  protected static final boolean REFS_TO_MANY_SLICES_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRefsToManySlices() <em>Refs To Many Slices</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRefsToManySlices()
   * @generated
   * @ordered
   */
  protected boolean refsToManySlices = REFS_TO_MANY_SLICES_EDEFAULT;

  /**
   * The default value of the '{@link #getRefersTo() <em>Refers To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefersTo()
   * @generated
   * @ordered
   */
  protected static final String REFERS_TO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRefersTo() <em>Refers To</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefersTo()
   * @generated
   * @ordered
   */
  protected String refersTo = REFERS_TO_EDEFAULT;

  /**
   * The default value of the '{@link #getRefersTo2() <em>Refers To2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefersTo2()
   * @generated
   * @ordered
   */
  protected static final String REFERS_TO2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRefersTo2() <em>Refers To2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefersTo2()
   * @generated
   * @ordered
   */
  protected String refersTo2 = REFERS_TO2_EDEFAULT;

  /**
   * The default value of the '{@link #getDoc() <em>Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoc()
   * @generated
   * @ordered
   */
  protected static final String DOC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDoc() <em>Doc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoc()
   * @generated
   * @ordered
   */
  protected String doc = DOC_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SdmdslPackage.Literals.FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPrimitiveType()
  {
    return primitiveType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimitiveType(String newPrimitiveType)
  {
    String oldPrimitiveType = primitiveType;
    primitiveType = newPrimitiveType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__PRIMITIVE_TYPE, oldPrimitiveType, primitiveType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumType getEnumeration()
  {
    if (enumeration != null && enumeration.eIsProxy())
    {
      InternalEObject oldEnumeration = (InternalEObject)enumeration;
      enumeration = (EnumType)eResolveProxy(oldEnumeration);
      if (enumeration != oldEnumeration)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SdmdslPackage.FIELD__ENUMERATION, oldEnumeration, enumeration));
      }
    }
    return enumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumType basicGetEnumeration()
  {
    return enumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnumeration(EnumType newEnumeration)
  {
    EnumType oldEnumeration = enumeration;
    enumeration = newEnumeration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__ENUMERATION, oldEnumeration, enumeration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getScalar()
  {
    return scalar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScalar(String newScalar)
  {
    String oldScalar = scalar;
    scalar = newScalar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__SCALAR, oldScalar, scalar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Dimensions> getDataDim()
  {
    if (dataDim == null)
    {
      dataDim = new EObjectContainmentEList<Dimensions>(Dimensions.class, this, SdmdslPackage.FIELD__DATA_DIM);
    }
    return dataDim;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isAutoIncrementable()
  {
    return autoIncrementable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAutoIncrementable(boolean newAutoIncrementable)
  {
    boolean oldAutoIncrementable = autoIncrementable;
    autoIncrementable = newAutoIncrementable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__AUTO_INCREMENTABLE, oldAutoIncrementable, autoIncrementable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRefsToAslice()
  {
    return refsToAslice;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefsToAslice(boolean newRefsToAslice)
  {
    boolean oldRefsToAslice = refsToAslice;
    refsToAslice = newRefsToAslice;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFS_TO_ASLICE, oldRefsToAslice, refsToAslice));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRefsToOne()
  {
    return refsToOne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefsToOne(boolean newRefsToOne)
  {
    boolean oldRefsToOne = refsToOne;
    refsToOne = newRefsToOne;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFS_TO_ONE, oldRefsToOne, refsToOne));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRefsToMany()
  {
    return refsToMany;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefsToMany(boolean newRefsToMany)
  {
    boolean oldRefsToMany = refsToMany;
    refsToMany = newRefsToMany;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFS_TO_MANY, oldRefsToMany, refsToMany));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRefsToManySlices()
  {
    return refsToManySlices;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefsToManySlices(boolean newRefsToManySlices)
  {
    boolean oldRefsToManySlices = refsToManySlices;
    refsToManySlices = newRefsToManySlices;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFS_TO_MANY_SLICES, oldRefsToManySlices, refsToManySlices));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRefersTo()
  {
    return refersTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefersTo(String newRefersTo)
  {
    String oldRefersTo = refersTo;
    refersTo = newRefersTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFERS_TO, oldRefersTo, refersTo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRefersTo2()
  {
    return refersTo2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefersTo2(String newRefersTo2)
  {
    String oldRefersTo2 = refersTo2;
    refersTo2 = newRefersTo2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__REFERS_TO2, oldRefersTo2, refersTo2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDoc()
  {
    return doc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDoc(String newDoc)
  {
    String oldDoc = doc;
    doc = newDoc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SdmdslPackage.FIELD__DOC, oldDoc, doc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SdmdslPackage.FIELD__DATA_DIM:
        return ((InternalEList<?>)getDataDim()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SdmdslPackage.FIELD__PRIMITIVE_TYPE:
        return getPrimitiveType();
      case SdmdslPackage.FIELD__ENUMERATION:
        if (resolve) return getEnumeration();
        return basicGetEnumeration();
      case SdmdslPackage.FIELD__NAME:
        return getName();
      case SdmdslPackage.FIELD__SCALAR:
        return getScalar();
      case SdmdslPackage.FIELD__DATA_DIM:
        return getDataDim();
      case SdmdslPackage.FIELD__AUTO_INCREMENTABLE:
        return isAutoIncrementable();
      case SdmdslPackage.FIELD__REFS_TO_ASLICE:
        return isRefsToAslice();
      case SdmdslPackage.FIELD__REFS_TO_ONE:
        return isRefsToOne();
      case SdmdslPackage.FIELD__REFS_TO_MANY:
        return isRefsToMany();
      case SdmdslPackage.FIELD__REFS_TO_MANY_SLICES:
        return isRefsToManySlices();
      case SdmdslPackage.FIELD__REFERS_TO:
        return getRefersTo();
      case SdmdslPackage.FIELD__REFERS_TO2:
        return getRefersTo2();
      case SdmdslPackage.FIELD__DOC:
        return getDoc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SdmdslPackage.FIELD__PRIMITIVE_TYPE:
        setPrimitiveType((String)newValue);
        return;
      case SdmdslPackage.FIELD__ENUMERATION:
        setEnumeration((EnumType)newValue);
        return;
      case SdmdslPackage.FIELD__NAME:
        setName((String)newValue);
        return;
      case SdmdslPackage.FIELD__SCALAR:
        setScalar((String)newValue);
        return;
      case SdmdslPackage.FIELD__DATA_DIM:
        getDataDim().clear();
        getDataDim().addAll((Collection<? extends Dimensions>)newValue);
        return;
      case SdmdslPackage.FIELD__AUTO_INCREMENTABLE:
        setAutoIncrementable((Boolean)newValue);
        return;
      case SdmdslPackage.FIELD__REFS_TO_ASLICE:
        setRefsToAslice((Boolean)newValue);
        return;
      case SdmdslPackage.FIELD__REFS_TO_ONE:
        setRefsToOne((Boolean)newValue);
        return;
      case SdmdslPackage.FIELD__REFS_TO_MANY:
        setRefsToMany((Boolean)newValue);
        return;
      case SdmdslPackage.FIELD__REFS_TO_MANY_SLICES:
        setRefsToManySlices((Boolean)newValue);
        return;
      case SdmdslPackage.FIELD__REFERS_TO:
        setRefersTo((String)newValue);
        return;
      case SdmdslPackage.FIELD__REFERS_TO2:
        setRefersTo2((String)newValue);
        return;
      case SdmdslPackage.FIELD__DOC:
        setDoc((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SdmdslPackage.FIELD__PRIMITIVE_TYPE:
        setPrimitiveType(PRIMITIVE_TYPE_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__ENUMERATION:
        setEnumeration((EnumType)null);
        return;
      case SdmdslPackage.FIELD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__SCALAR:
        setScalar(SCALAR_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__DATA_DIM:
        getDataDim().clear();
        return;
      case SdmdslPackage.FIELD__AUTO_INCREMENTABLE:
        setAutoIncrementable(AUTO_INCREMENTABLE_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFS_TO_ASLICE:
        setRefsToAslice(REFS_TO_ASLICE_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFS_TO_ONE:
        setRefsToOne(REFS_TO_ONE_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFS_TO_MANY:
        setRefsToMany(REFS_TO_MANY_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFS_TO_MANY_SLICES:
        setRefsToManySlices(REFS_TO_MANY_SLICES_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFERS_TO:
        setRefersTo(REFERS_TO_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__REFERS_TO2:
        setRefersTo2(REFERS_TO2_EDEFAULT);
        return;
      case SdmdslPackage.FIELD__DOC:
        setDoc(DOC_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SdmdslPackage.FIELD__PRIMITIVE_TYPE:
        return PRIMITIVE_TYPE_EDEFAULT == null ? primitiveType != null : !PRIMITIVE_TYPE_EDEFAULT.equals(primitiveType);
      case SdmdslPackage.FIELD__ENUMERATION:
        return enumeration != null;
      case SdmdslPackage.FIELD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SdmdslPackage.FIELD__SCALAR:
        return SCALAR_EDEFAULT == null ? scalar != null : !SCALAR_EDEFAULT.equals(scalar);
      case SdmdslPackage.FIELD__DATA_DIM:
        return dataDim != null && !dataDim.isEmpty();
      case SdmdslPackage.FIELD__AUTO_INCREMENTABLE:
        return autoIncrementable != AUTO_INCREMENTABLE_EDEFAULT;
      case SdmdslPackage.FIELD__REFS_TO_ASLICE:
        return refsToAslice != REFS_TO_ASLICE_EDEFAULT;
      case SdmdslPackage.FIELD__REFS_TO_ONE:
        return refsToOne != REFS_TO_ONE_EDEFAULT;
      case SdmdslPackage.FIELD__REFS_TO_MANY:
        return refsToMany != REFS_TO_MANY_EDEFAULT;
      case SdmdslPackage.FIELD__REFS_TO_MANY_SLICES:
        return refsToManySlices != REFS_TO_MANY_SLICES_EDEFAULT;
      case SdmdslPackage.FIELD__REFERS_TO:
        return REFERS_TO_EDEFAULT == null ? refersTo != null : !REFERS_TO_EDEFAULT.equals(refersTo);
      case SdmdslPackage.FIELD__REFERS_TO2:
        return REFERS_TO2_EDEFAULT == null ? refersTo2 != null : !REFERS_TO2_EDEFAULT.equals(refersTo2);
      case SdmdslPackage.FIELD__DOC:
        return DOC_EDEFAULT == null ? doc != null : !DOC_EDEFAULT.equals(doc);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (primitiveType: ");
    result.append(primitiveType);
    result.append(", name: ");
    result.append(name);
    result.append(", scalar: ");
    result.append(scalar);
    result.append(", autoIncrementable: ");
    result.append(autoIncrementable);
    result.append(", refsToAslice: ");
    result.append(refsToAslice);
    result.append(", refsToOne: ");
    result.append(refsToOne);
    result.append(", refsToMany: ");
    result.append(refsToMany);
    result.append(", refsToManySlices: ");
    result.append(refsToManySlices);
    result.append(", refersTo: ");
    result.append(refersTo);
    result.append(", refersTo2: ");
    result.append(refersTo2);
    result.append(", doc: ");
    result.append(doc);
    result.append(')');
    return result.toString();
  }

} //FieldImpl
