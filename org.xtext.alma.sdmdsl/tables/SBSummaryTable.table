
/*
 ALMA - Atacama Large Millimeter Array
 (c) European Southern Observatory, 2002
 (c) Associated Universities Inc., 2002
 Copyright by ESO (in the framework of the ALMA collaboration),
 Copyright by AUI (in the framework of the ALMA collaboration),
 All rights reserved.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY, without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA 02111-1307  USA

 Warning!
  -------------------------------------------------------------------- 
 | This is generated code!  Do not modify this file.                  |
 | If you do, all changes will be lost when the file is re-generated. |
  --------------------------------------------------------------------

 File SBSummaryTable.table
*/

 package alma.asdm.tables
 

 /*
 Characteristics of the Scheduling Block that has been executed. Much of the  data here is reproduced from the Scheduling block itself.
 */
 table SBSummary {
 	Key:
 	
 		Tag sBSummaryId  autoIncrementable  			
		

	
 /* refers to a unique row in the table.|Identifies each row of the SBSummary  table. */
 	
 	Required Data:
 	
 		EntityRef sbSummaryUID  			
		

	
  /* the scheduling block archive's UID.|Archive UID of the scheduling block. */
 	
 		EntityRef projectUID  			
		

	
  /* the projet archive's UID.|Archive UID of the project. */
 	
 		EntityRef obsUnitSetUID  			
		

	
  /* the observing unit set archive's UID.|Archive UID of the observing unit set. */
 	
 		Double frequency  			
		

	
  /* a representative frequency.|Representative frequency. */
 	
 		ReceiverBand frequencyBand  			
		

	
  /* the frequency band.|Frequency band used for the SB. */
 	
 		SBType sbType  			
		

	
  /* the type of scheduling block.|Type of Scheduling Block (e.g. science, calibration, ...) */
 	
 		Interval sbDuration  			
		

	
  /* the duration of the scheduling block.|The duration of this SB (as planned). */
 	
 		Integer numObservingMode  			
		

	
  /* the number of observing modes.|The number of observing modes. */
 	
 		String observingMode  [numObservingMode]  									
		
	
		

	
  /* the observing modes.|Standard observing mode, e.g. singleField,   mosaic. One SB cannot have more than one standard observing mode. Examples:   Single Field Interferometry, Pointed Mosaic, ... */
 	
 		Integer numberRepeats  			
		

	
  /* the number of repeats.|Number of executions scheduled for this SB. */
 	
 		Integer numScienceGoal  			
		

	
  /* the number of scientific goals.|Number of science goals. */
 	
 		String scienceGoal  [numScienceGoal]  									
		
	
		

	
  /* the scientific goals.|The science goals. */
 	
 		Integer numWeatherConstraint  			
		

	
  /* the number of weather constraints.|The number of weather constraints. */
 	
 		String weatherConstraint  [numWeatherConstraint]  									
		
	
		

	
  /* the weather constraints.|Weather scheduling constraints, as specified in the Observing Tool. */
 	 	
 	
 	Optional Data:
 	
 		Angle centerDirection   [2]  									
		
	
		

	
 /* the representative target direction.|Direction of the    representative target. */
 	
 		DirectionReferenceCode centerDirectionCode   			
		

	
 /* identifies the direction reference frame associated with centerDirection.| The center direction reference    code, if not \\texttt{J2000}. */
 	
 		ArrayTime centerDirectionEquinox   			
		

	
 /* the equinox associated to centerDirectionReferenceCode (if needed).|The center direction reference    equinox, if required by \\texttt{centerDirectionCode}. */
 	 	
 
 }
