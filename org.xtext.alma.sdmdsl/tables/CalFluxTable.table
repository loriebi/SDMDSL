
/*
 ALMA - Atacama Large Millimeter Array
 (c) European Southern Observatory, 2002
 (c) Associated Universities Inc., 2002
 Copyright by ESO (in the framework of the ALMA collaboration),
 Copyright by AUI (in the framework of the ALMA collaboration),
 All rights reserved.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY, without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA 02111-1307  USA

 Warning!
  -------------------------------------------------------------------- 
 | This is generated code!  Do not modify this file.                  |
 | If you do, all changes will be lost when the file is re-generated. |
  --------------------------------------------------------------------

 File CalFluxTable.table
*/

 package alma.asdm.tables
 

 /*
 Result of flux calibration performed on-line by TelCal. Atmospheric absorption is corrected for. No ionosphere correction has been applied.
 */
 table CalFlux {
 	Key:
 	
 		String sourceName  			
		

	
 /* the name of the source.|The name of the source for which flux density     information was derived. */
 	
 		Tag calDataId  						refersToOne CalData 
			
		
	
 /* refers to a unique row in CalData Table.|CalData Table identifier. */
 	
 		Tag calReductionId  						refersToOne CalReduction 
			
		
	
 /* refers to a unique row in CalReduction Table.|CalReductionTable identifier. */
 	
 	Required Data:
 	
 		ArrayTime startValidTime  			
		

	
  /* the start time of result validity period.|The start of the time validity range for     the result. */
 	
 		ArrayTime endValidTime  			
		

	
  /* the end time of result validity period.|The end of the time validity range for the result. */
 	
 		Integer numFrequencyRanges  			
		

	
  /* the number of frequency ranges.| The number of frequency ranges for which     flux density information was derived */
 	
 		Integer numStokes  			
		

	
  /* the number of Stokes parameters.|The number of Stokes parameters which were     measured for this source. */
 	
 		Frequency frequencyRanges  [numFrequencyRanges][2]  									
		
	
		

	
  /* the frequency ranges (one pair of values per range).|Frequency ranges over which the result is valid. {\\MFrequency{TOPO}} */
 	
 		FluxCalibrationMethod fluxMethod  			
		

	
  /* identifies the flux determination method.|The method which was used to derive flux     densities. */
 	
 		Double flux  [numStokes][numFrequencyRanges]  									
		
	
		

	
  /* the flux densities (one value par Stokes parameter per frequency range) expressed in Jansky (Jy).|The derived flux density values expressed in Jansky (Jy). */
 	
 		Double fluxError  [numStokes][numFrequencyRanges]  									
		
	
		

	
  /* the uncertainties on the flux densities (one value per Stokes parameter per frequency range).| The statistical uncertainties of the flux     densities which were derived. */
 	
 		StokesParameter stokes  [numStokes]  									
		
	
		

	
  /* the Stokes parameter.|The names of the Stokes parameters which were derived. */
 	 	
 	
 	Optional Data:
 	
 		Angle direction   [2]  									
		
	
		

	
 /* the direction of the source.|The reference code for    \\texttt{direction},   if not \\texttt{J2000}. */
 	
 		DirectionReferenceCode directionCode   			
		

	
 /* identifies the reference frame of the source's direction.|The direction to the source in celestial coordinates. */
 	
 		Angle directionEquinox   			
		

	
 /* equinox associated with the reference frame of the source's direction.|The reference equinox for    \\texttt{direction},   if required by \\texttt{directionCode} */
 	
 		Angle PA   [numStokes][numFrequencyRanges]  									
		
	
		

	
 /* the position's angles for the source model (one value per Stokes parameter per frequency range).|Position angle for source model. */
 	
 		Angle PAError   [numStokes][numFrequencyRanges]  									
		
	
		

	
 /* the uncertainties on the position's angles (one value per Stokes parameter per frequency range).|Uncertainty on position angle for source model. */
 	
 		Angle size   [numStokes][numFrequencyRanges][2]  									
		
	
		

	
 /* the sizes of the source (one pair of angles per Stokes parameter per frequency range).|Half power sizes of source (main axes of ellipse). */
 	
 		Angle sizeError   [numStokes][numFrequencyRanges][2]  									
		
	
		

	
 /* the uncertainties of the sizes of the source (one pair of angles per Stokes parameter per frequency range).|Uncertainties on half power size of source      (main axes of ellipse) */
 	
 		SourceModel sourceModel   			
		

	
 /* identifies the source model.|Model used for source, e.g., point-like or Gaussian. */
 	 	
 
 }
