
/*
 ALMA - Atacama Large Millimeter Array
 (c) European Southern Observatory, 2002
 (c) Associated Universities Inc., 2002
 Copyright by ESO (in the framework of the ALMA collaboration),
 Copyright by AUI (in the framework of the ALMA collaboration),
 All rights reserved.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY, without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 MA 02111-1307  USA

 Warning!
  -------------------------------------------------------------------- 
 | This is generated code!  Do not modify this file.                  |
 | If you do, all changes will be lost when the file is re-generated. |
  --------------------------------------------------------------------

 File CalFocusTable.table
*/

 package alma.asdm.tables
 

 /*
 Result of focus calibration performed on-line by TelCal.
 */
 table CalFocus {
 	Key:
 	
 		String antennaName  			
		

	
 /* the name of the antenna.|Refers uniquely to the hardware antenna object, as present in the original ASDM Antenna table. */
 	
 		ReceiverBand receiverBand  			
		

	
 /* identifies the receiver band.|The name of the front-end frequency band being used. */
 	
 		Tag calDataId  						refersToOne CalData 
			
		
	
 /* refers to a unique row in CalData Table.|CalData Table identifier. */
 	
 		Tag calReductionId  						refersToOne CalReduction 
			
		
	
 /* refers to a unique row in CalReduction Table.|CalReduction Table identifier. */
 	
 	Required Data:
 	
 		ArrayTime startValidTime  			
		

	
  /* the start time of the result validity period.|The start of the time validity range for   the result. */
 	
 		ArrayTime endValidTime  			
		

	
  /* the end time of the result validity period.|The end of the time validity range for the result. */
 	
 		Temperature ambientTemperature  			
		

	
  /* the ambient temperature.|Ambient temperature at the   time of measurement. For mm-wave  antennas a temperature dependence of the   focus correction is expected. */
 	
 		AtmPhaseCorrection atmPhaseCorrection  			
		

	
  /* qualifies how the atmospheric phase correction has been applied.|The atmospheric phase correction states for which result is given. */
 	
 		FocusMethod focusMethod  			
		

	
  /* identifies the method used during the calibration.|Method used, e.g., 'Interferometry' or '5 points' */
 	
 		Frequency frequencyRange  [2]  									
		
	
		

	
  /* the frequency range over which the result is valid.|Frequency range over which the result is valid.  {\\MFrequency{TOPO}} */
 	
 		Angle pointingDirection  [2]  									
		
	
		

	
  /* the antenna pointing direction (horizontal coordinates).|The antenna pointing direction (horizontal    coordinates). For mm-wave  antennas an elevation dependence of the   focus correction is expected.   \\MDirection{AZEL}{NOW}{Antenna.position} */
 	
 		Integer numReceptor  			
		

	
  /* the number of receptors.|Number of receptors. */
 	
 		PolarizationType polarizationTypes  [numReceptor]  									
		
	
		

	
  /* identifies the polarization types (one value per receptor).|The relevant polarizations for the measured focus parameters. */
 	
 		Boolean wereFixed  [3]  									
		
	
		

	
  /* coordinates were fixed (true) or not fixed (false) (one value per individual coordinate).|Indicates which focus coordinates were kept   fixed during measursment (and thus were not measured). */
 	
 		Length offset  [numReceptor][3]  									
		
	
		

	
  /* the measured focus offsets in X,Y,Z (one triple of values per receptor).|The measured focus offsets in X, Y, Z.   This offset is relative to the nominal position of the focus, once the   focus model has been applied. */
 	
 		Length offsetError  [numReceptor][3]  									
		
	
		

	
  /* the statistical uncertainties on measured focus offsets (one triple per receptor).|Uncertainty of \\texttt{offset}. */
 	
 		Boolean offsetWasTied  [numReceptor][3]  									
		
	
		

	
  /* focus was tied (true) or not tied (false) (one value per receptor and focus individual coordinate).|True for a polarization and focus     coordinate when this quantity was assumed fixed relative to the     corresponding coordinate in the other polarization. */
 	
 		Double reducedChiSquared  [numReceptor][3]  									
		
	
		

	
  /* a measure of the quality of the fit (one triple per receptor).|Reduced \\$\\chi^2\\$      indicating the quality of the least-squares fit. */
 	
 		Length position  [numReceptor][3]  									
		
	
		

	
  /* the absolute focus position in X,Y,Z (one triple of values per receptor). */
 	 	
 	
 	Optional Data:
 	
 		Boolean polarizationsAveraged   			
		

	
 /* Polarizations were averaged.|Set when polarizations were averaged over to improve sensitivity. */
 	
 		Length focusCurveWidth   [numReceptor][3]  									
		
	
		

	
 /* half power width of fitted focus curve (one triple per receptor).|Half-power width of   fitted focus curve. */
 	
 		Length focusCurveWidthError   [numReceptor][3]  									
		
	
		

	
 /* Uncertainty of the focus curve width.|Statistical uncertainty of the half-power width of the fitted focus curve. */
 	
 		Boolean focusCurveWasFixed   [3]  									
		
	
		

	
 /* each coordinate of the focus curve width was set (true) or not set (false) to an assumed value.|Indicates that   the half-power width of the fitted focus curvewas fixed to an assumed   value. */
 	
 		Temperature offIntensity   [numReceptor]  									
		
	
		

	
 /* the off intensity levels (one value per receptor).|Off intensity level. This is   needed for completeness to define the fitted beam function whenever  the off   level is non-zero (single-dish pointing). */
 	
 		Temperature offIntensityError   [numReceptor]  									
		
	
		

	
 /* the uncertainties on the off intensity levels (one value per receptor).|Off intensity level   uncertainty */
 	
 		Boolean offIntensityWasFixed   			
		

	
 /* the off intensity level was fixed (true) or not fixed (false).|Off intensity level   was fixed. */
 	
 		Temperature peakIntensity   [numReceptor]  									
		
	
		

	
 /* the maximum intensities (one value per receptor).|Fitted maximum intensity   of signal. */
 	
 		Temperature peakIntensityError   [numReceptor]  									
		
	
		

	
 /* the uncertainties on the maximum intensities (one value per receptor).|Statistical   uncertainty of the fitted maximum signal intensity. */
 	
 		Boolean peakIntensityWasFixed   			
		

	
 /* the maximum intensity was fixed (true) or not fixed (false).|Indicates that the   maximal signal intensity was fixed to an assumed value. */
 	
 		Length astigmPlus   [numReceptor]  									
		
	
		

	
 /* the astigmatism component with 0 degree symmetry axis. */
 	
 		Length astigmPlusError   [numReceptor]  									
		
	
		

	
 /* the statistical error on astigmPlus */
 	
 		Length astigmMult   [numReceptor]  									
		
	
		

	
 /* the astigmatism component with 45 degrees symmetry axis. */
 	
 		Length astigmMultError   [numReceptor]  									
		
	
		

	
 /* the statistical error on astigmMult */
 	
 		Length illumOffset   [numReceptor][2]  									
		
	
		

	
 /* the illumination offset of the primary reflector expressed as a pair of values. */
 	
 		Length illumOffsetError   [numReceptor][2]  									
		
	
		

	
 /* the statistical error on illumOffset. */
 	
 		Length fitRMS   [numReceptor]  									
		
	
		

	
 /* The RMS of the half path length after removing the best fit parabola. */
 	 	
 
 }
