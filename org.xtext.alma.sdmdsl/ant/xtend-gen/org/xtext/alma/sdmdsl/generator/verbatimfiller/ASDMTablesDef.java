package org.xtext.alma.sdmdsl.generator.verbatimfiller;

import alma.hla.datamodel.meta.asdm.AlmaTable;
import alma.hla.datamodel.meta.asdm.AlmaTableContainer;
import java.util.List;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.alma.sdmdsl.generator.sdmfilesystem.SDMFileSystemAccess;

@SuppressWarnings("all")
public class ASDMTablesDef {
  private AlmaTableContainer container = AlmaTableContainer.getInstance();
  
  public void doGenerate(final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    SDMFileSystemAccess sdmFsa = ((SDMFileSystemAccess) fsa);
    sdmFsa.setFile("/tmp/include/ASDMTables.h");
    CharSequence _generateASDMTablesDef = this.generateASDMTablesDef();
    sdmFsa.generateFile(_generateASDMTablesDef);
  }
  
  public CharSequence generateASDMTablesDef() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("#ifndef _ASDMTABLES_H_");
    _builder.newLine();
    _builder.append("#define _ASDMTABLES_H_");
    _builder.newLine();
    _builder.append("#include \"ASDMTableBase.h\"");
    _builder.newLine();
    _builder.append("/*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ALMA - Atacama Large Millimeter Array");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* (c) European Southern Observatory, 2002");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* (c) Associated Universities Inc., 2002");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Copyright by ESO (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Copyright by AUI (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* All rights reserved.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* This library is free software; you can redistribute it and/or");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* modify it under the terms of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* License as published by the Free software Foundation; either");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* version 2.1 of the License, or (at your option) any later version.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* This library is distributed in the hope that it will be useful,");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* but WITHOUT ANY WARRANTY, without even the implied warranty of");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Lesser General Public License for more details.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* You should have received a copy of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* License along with this library; if not, write to the Free Software");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Foundation, Inc., 59 Temple Place, Suite 330, Boston,");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* MA 02111-1307  USA");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Warning!");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*  -------------------------------------------------------------------- ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* | This is generated code!  Do not modify this file.                  |");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* | If you do, all changes will be lost when the file is re-generated. |");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*  --------------------------------------------------------------------");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* File ASDMTables.h");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    {
      List<AlmaTable> _sortedAlmaTable = this.container.sortedAlmaTable();
      for(final AlmaTable table : _sortedAlmaTable) {
        _builder.append("class ASDM_");
        String _name = table.getName();
        String _upperCase = _name.toUpperCase();
        _builder.append(_upperCase, "");
        _builder.append(" : public ASDM_TABLE_SINGLETON<ASDM_");
        String _name_1 = table.getName();
        String _upperCase_1 = _name_1.toUpperCase();
        _builder.append(_upperCase_1, "");
        _builder.append(">, public ASDM_TABLE_BASE {");
        _builder.newLineIfNotEmpty();
        _builder.append("  ");
        _builder.append("friend class ASDM_TABLE_SINGLETON<ASDM_");
        String _name_2 = table.getName();
        String _upperCase_2 = _name_2.toUpperCase();
        _builder.append(_upperCase_2, "  ");
        _builder.append(">;");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("private:");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("ASDM_");
        String _name_3 = table.getName();
        String _upperCase_3 = _name_3.toUpperCase();
        _builder.append(_upperCase_3, "\t ");
        _builder.append("();");
        _builder.newLineIfNotEmpty();
        _builder.append("\t ");
        _builder.append("~ASDM_");
        String _name_4 = table.getName();
        String _upperCase_4 = _name_4.toUpperCase();
        _builder.append(_upperCase_4, "\t ");
        _builder.append("();");
        _builder.newLineIfNotEmpty();
        _builder.append("\t ");
        _builder.append("TableDesc tableDesc_;");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("public:");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("const TableDesc& tableDesc() const;");
        _builder.newLine();
        _builder.append("\t ");
        _builder.append("void fill(const ASDM& asdm);");
        _builder.newLine();
        _builder.append("};");
        _builder.newLine();
      }
    }
    _builder.append(" ");
    _builder.newLine();
    _builder.append("#endif // _ASDMTABLES_H_ ");
    _builder.newLine();
    return _builder;
  }
}
