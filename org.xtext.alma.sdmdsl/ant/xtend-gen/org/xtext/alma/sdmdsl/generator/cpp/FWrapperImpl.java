package org.xtext.alma.sdmdsl.generator.cpp;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.alma.sdmdsl.generator.cpp.FTableWrapperImpl;
import org.xtext.alma.sdmdsl.generator.sdmfilesystem.SDMFileSystemAccess;

@SuppressWarnings("all")
public class FWrapperImpl {
  public void doGenerate(final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    SDMFileSystemAccess sdmFsa = ((SDMFileSystemAccess) fsa);
    sdmFsa.setFile("src/sdm_modules.f90");
    CharSequence _generateModuls = this.generateModuls();
    sdmFsa.generateFile(_generateModuls);
    sdmFsa.setFile("src/sdm_library.f90");
    CharSequence _generateLibrary = this.generateLibrary();
    sdmFsa.generateFile(_generateLibrary);
  }
  
  public CharSequence generateModuls() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//! ALMA - Atacama Large Millimeter Array");
    _builder.newLine();
    _builder.append("//! (c) European Southern Observatory, 2002");
    _builder.newLine();
    _builder.append("//! (c) Associated Universities Inc., 2002");
    _builder.newLine();
    _builder.append("//! Copyright by ESO (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append("//! Copyright by AUI (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append("//! All rights reserved.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! This library is free software; you can redistribute it and/or");
    _builder.newLine();
    _builder.append("//! modify it under the terms of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append("//! License as published by the Free software Foundation; either");
    _builder.newLine();
    _builder.append("//! version 2.1 of the License, or (at your option) any later version.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! This library is distributed in the hope that it will be useful,");
    _builder.newLine();
    _builder.append("//! but WITHOUT ANY WARRANTY, without even the implied warranty of");
    _builder.newLine();
    _builder.append("//! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU");
    _builder.newLine();
    _builder.append("//! Lesser General Public License for more details.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! You should have received a copy of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append("//! License along with this library; if not, write to the Free Software");
    _builder.newLine();
    _builder.append("//! Foundation, Inc., 59 Temple Place, Suite 330, Boston,");
    _builder.newLine();
    _builder.append("//! MA 02111-1307  USA");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//! File sdm_modules.f90");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//!----------------------------------------------------------------------------");
    _builder.newLine();
    _builder.append("//! General types:");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//module sdm_Types");
    _builder.newLine();
    _builder.append("////type ArrayTimeInterval");
    _builder.newLine();
    _builder.append("//////sequence");
    _builder.newLine();
    _builder.append("//////integer*8 time");
    _builder.newLine();
    _builder.append("//////integer*8 interval");
    _builder.newLine();
    _builder.append("////end type ArrayTimeInterval");
    _builder.newLine();
    _builder.append("//end module sdm_Types");
    _builder.newLine();
    _builder.newLine();
    FTableWrapperImpl _fTableWrapperImpl = new FTableWrapperImpl();
    CharSequence _appendModules = _fTableWrapperImpl.appendModules();
    _builder.append(_appendModules, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateLibrary() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//! ALMA - Atacama Large Millimeter Array");
    _builder.newLine();
    _builder.append("//! (c) European Southern Observatory, 2002");
    _builder.newLine();
    _builder.append("//! (c) Associated Universities Inc., 2002");
    _builder.newLine();
    _builder.append("//! Copyright by ESO (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append("//! Copyright by AUI (in the framework of the ALMA collaboration),");
    _builder.newLine();
    _builder.append("//! All rights reserved.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! This library is free software; you can redistribute it and/or");
    _builder.newLine();
    _builder.append("//! modify it under the terms of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append("//! License as published by the Free software Foundation; either");
    _builder.newLine();
    _builder.append("//! version 2.1 of the License, or (at your option) any later version.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! This library is distributed in the hope that it will be useful,");
    _builder.newLine();
    _builder.append("//! but WITHOUT ANY WARRANTY, without even the implied warranty of");
    _builder.newLine();
    _builder.append("//! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU");
    _builder.newLine();
    _builder.append("//! Lesser General Public License for more details.");
    _builder.newLine();
    _builder.append("//! ");
    _builder.newLine();
    _builder.append("//! You should have received a copy of the GNU Lesser General Public");
    _builder.newLine();
    _builder.append("//! License along with this library; if not, write to the Free Software");
    _builder.newLine();
    _builder.append("//! Foundation, Inc., 59 Temple Place, Suite 330, Boston,");
    _builder.newLine();
    _builder.append("//! MA 02111-1307  USA");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//! File sdm_library.f90");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("//!----------------------------------------------------------------------------");
    _builder.newLine();
    _builder.append("//subroutine charcut(string)");
    _builder.newLine();
    _builder.append("//! find unused end part of string and replace with nulls.");
    _builder.newLine();
    _builder.append("//!");
    _builder.newLine();
    _builder.append("////character *(*) string");
    _builder.newLine();
    _builder.append("////integer i, j, k, l");
    _builder.newLine();
    _builder.append("////k = 1");
    _builder.newLine();
    _builder.append("////l = len(string)");
    _builder.newLine();
    _builder.append("////do i=1, l");
    _builder.newLine();
    _builder.append("//////j = ichar(string(i:i))");
    _builder.newLine();
    _builder.append("//////if (j.ge.ichar(\'!\').and.j.le.ichar(\'~\')) k=i+1");
    _builder.newLine();
    _builder.append("////enddo");
    _builder.newLine();
    _builder.append("////k = min(k,l)");
    _builder.newLine();
    _builder.append("////string(k:l) = char(0)");
    _builder.newLine();
    _builder.append("//end subroutine charcut");
    _builder.newLine();
    _builder.newLine();
    FTableWrapperImpl _fTableWrapperImpl = new FTableWrapperImpl();
    CharSequence _appendLibrary = _fTableWrapperImpl.appendLibrary();
    _builder.append(_appendLibrary, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
}
