/*
 * generated by Xtext 2.9.1
 */
grammar InternalSdmdsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.alma.sdmdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.alma.sdmdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.alma.sdmdsl.services.SdmdslGrammarAccess;

}
@parser::members {
	private SdmdslGrammarAccess grammarAccess;

	public void setGrammarAccess(SdmdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveTypes
entryRulePrimitiveTypes
:
{ before(grammarAccess.getPrimitiveTypesRule()); }
	 rulePrimitiveTypes
{ after(grammarAccess.getPrimitiveTypesRule()); } 
	 EOF 
;

// Rule PrimitiveTypes
rulePrimitiveTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getAlternatives()); }
		(rule__PrimitiveTypes__Alternatives)
		{ after(grammarAccess.getPrimitiveTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhysicalType
entryRulePhysicalType
:
{ before(grammarAccess.getPhysicalTypeRule()); }
	 rulePhysicalType
{ after(grammarAccess.getPhysicalTypeRule()); } 
	 EOF 
;

// Rule PhysicalType
rulePhysicalType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getAlternatives()); }
		(rule__PhysicalType__Alternatives)
		{ after(grammarAccess.getPhysicalTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTechnicalType
entryRuleTechnicalType
:
{ before(grammarAccess.getTechnicalTypeRule()); }
	 ruleTechnicalType
{ after(grammarAccess.getTechnicalTypeRule()); } 
	 EOF 
;

// Rule TechnicalType
ruleTechnicalType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTechnicalTypeAccess().getAlternatives()); }
		(rule__TechnicalType__Alternatives)
		{ after(grammarAccess.getTechnicalTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeType
entryRuleTimeType
:
{ before(grammarAccess.getTimeTypeRule()); }
	 ruleTimeType
{ after(grammarAccess.getTimeTypeRule()); } 
	 EOF 
;

// Rule TimeType
ruleTimeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeTypeAccess().getAlternatives()); }
		(rule__TimeType__Alternatives)
		{ after(grammarAccess.getTimeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalField
entryRuleGlobalField
:
{ before(grammarAccess.getGlobalFieldRule()); }
	 ruleGlobalField
{ after(grammarAccess.getGlobalFieldRule()); } 
	 EOF 
;

// Rule GlobalField
ruleGlobalField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getGroup()); }
		(rule__GlobalField__Group__0)
		{ after(grammarAccess.getGlobalFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimensions
entryRuleDimensions
:
{ before(grammarAccess.getDimensionsRule()); }
	 ruleDimensions
{ after(grammarAccess.getDimensionsRule()); } 
	 EOF 
;

// Rule Dimensions
ruleDimensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionsAccess().getAlternatives()); }
		(rule__Dimensions__Alternatives)
		{ after(grammarAccess.getDimensionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotDefined
entryRuleNotDefined
:
{ before(grammarAccess.getNotDefinedRule()); }
	 ruleNotDefined
{ after(grammarAccess.getNotDefinedRule()); } 
	 EOF 
;

// Rule NotDefined
ruleNotDefined 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotDefinedAccess().getGroup()); }
		(rule__NotDefined__Group__0)
		{ after(grammarAccess.getNotDefinedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefined
entryRuleDefined
:
{ before(grammarAccess.getDefinedRule()); }
	 ruleDefined
{ after(grammarAccess.getDefinedRule()); } 
	 EOF 
;

// Rule Defined
ruleDefined 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinedAccess().getGroup()); }
		(rule__Defined__Group__0)
		{ after(grammarAccess.getDefinedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDimensions
entryRuleFieldDimensions
:
{ before(grammarAccess.getFieldDimensionsRule()); }
	 ruleFieldDimensions
{ after(grammarAccess.getFieldDimensionsRule()); } 
	 EOF 
;

// Rule FieldDimensions
ruleFieldDimensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDimensionsAccess().getDimValueAssignment()); }
		(rule__FieldDimensions__DimValueAssignment)
		{ after(grammarAccess.getFieldDimensionsAccess().getDimValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOtherTableField
entryRuleOtherTableField
:
{ before(grammarAccess.getOtherTableFieldRule()); }
	 ruleOtherTableField
{ after(grammarAccess.getOtherTableFieldRule()); } 
	 EOF 
;

// Rule OtherTableField
ruleOtherTableField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherTableFieldAccess().getGroup()); }
		(rule__OtherTableField__Group__0)
		{ after(grammarAccess.getOtherTableFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntDimensions
entryRuleIntDimensions
:
{ before(grammarAccess.getIntDimensionsRule()); }
	 ruleIntDimensions
{ after(grammarAccess.getIntDimensionsRule()); } 
	 EOF 
;

// Rule IntDimensions
ruleIntDimensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntDimensionsAccess().getDimValueAssignment()); }
		(rule__IntDimensions__DimValueAssignment)
		{ after(grammarAccess.getIntDimensionsAccess().getDimValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getBasicTypeParserRuleCall_0()); }
		ruleBasicType
		{ after(grammarAccess.getPrimitiveTypesAccess().getBasicTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getPhysicalTypeParserRuleCall_1()); }
		rulePhysicalType
		{ after(grammarAccess.getPrimitiveTypesAccess().getPhysicalTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getTechnicalTypeParserRuleCall_2()); }
		ruleTechnicalType
		{ after(grammarAccess.getPrimitiveTypesAccess().getTechnicalTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getTimeTypeParserRuleCall_3()); }
		ruleTimeType
		{ after(grammarAccess.getPrimitiveTypesAccess().getTimeTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getCharKeyword_0()); }
		'Char'
		{ after(grammarAccess.getBasicTypeAccess().getCharKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getShortKeyword_1()); }
		'Short'
		{ after(grammarAccess.getBasicTypeAccess().getShortKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getIntegerKeyword_2()); }
		'Integer'
		{ after(grammarAccess.getBasicTypeAccess().getIntegerKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getLongKeyword_3()); }
		'Long'
		{ after(grammarAccess.getBasicTypeAccess().getLongKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getFloatKeyword_4()); }
		'Float'
		{ after(grammarAccess.getBasicTypeAccess().getFloatKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getDoubleKeyword_5()); }
		'Double'
		{ after(grammarAccess.getBasicTypeAccess().getDoubleKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getComplexKeyword_6()); }
		'Complex'
		{ after(grammarAccess.getBasicTypeAccess().getComplexKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getStringKeyword_7()); }
		'String'
		{ after(grammarAccess.getBasicTypeAccess().getStringKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getBooleanKeyword_8()); }
		'Boolean'
		{ after(grammarAccess.getBasicTypeAccess().getBooleanKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getAngleKeyword_0()); }
		'Angle'
		{ after(grammarAccess.getPhysicalTypeAccess().getAngleKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getAngularRateKeyword_1()); }
		'AngularRate'
		{ after(grammarAccess.getPhysicalTypeAccess().getAngularRateKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getFluxKeyword_2()); }
		'Flux'
		{ after(grammarAccess.getPhysicalTypeAccess().getFluxKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getFrequencyKeyword_3()); }
		'Frequency'
		{ after(grammarAccess.getPhysicalTypeAccess().getFrequencyKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getHumidityKeyword_4()); }
		'Humidity'
		{ after(grammarAccess.getPhysicalTypeAccess().getHumidityKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getLengthKeyword_5()); }
		'Length'
		{ after(grammarAccess.getPhysicalTypeAccess().getLengthKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getPressureKeyword_6()); }
		'Pressure'
		{ after(grammarAccess.getPhysicalTypeAccess().getPressureKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getSpeedKeyword_7()); }
		'Speed'
		{ after(grammarAccess.getPhysicalTypeAccess().getSpeedKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getTemperatureKeyword_8()); }
		'Temperature'
		{ after(grammarAccess.getPhysicalTypeAccess().getTemperatureKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TechnicalType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTechnicalTypeAccess().getTagKeyword_0()); }
		'Tag'
		{ after(grammarAccess.getTechnicalTypeAccess().getTagKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTechnicalTypeAccess().getEntityKeyword_1()); }
		'Entity'
		{ after(grammarAccess.getTechnicalTypeAccess().getEntityKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTechnicalTypeAccess().getEntityIdKeyword_2()); }
		'EntityId'
		{ after(grammarAccess.getTechnicalTypeAccess().getEntityIdKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTechnicalTypeAccess().getEntityRefKeyword_3()); }
		'EntityRef'
		{ after(grammarAccess.getTechnicalTypeAccess().getEntityRefKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getIntervalKeyword_0()); }
		'Interval'
		{ after(grammarAccess.getTimeTypeAccess().getIntervalKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeTypeAccess().getArrayTimeKeyword_1()); }
		'ArrayTime'
		{ after(grammarAccess.getTimeTypeAccess().getArrayTimeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeTypeAccess().getArrayTimeIntervalKeyword_2()); }
		'ArrayTimeInterval'
		{ after(grammarAccess.getTimeTypeAccess().getArrayTimeIntervalKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getPrimitiveTypeAssignment_0_0()); }
		(rule__Field__PrimitiveTypeAssignment_0_0)
		{ after(grammarAccess.getFieldAccess().getPrimitiveTypeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getEnumerationAssignment_0_1()); }
		(rule__Field__EnumerationAssignment_0_1)
		{ after(grammarAccess.getFieldAccess().getEnumerationAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getScalarAssignment_2_0()); }
		(rule__Field__ScalarAssignment_2_0)?
		{ after(grammarAccess.getFieldAccess().getScalarAssignment_2_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getFieldAccess().getDataDimAssignment_2_1()); }
			(rule__Field__DataDimAssignment_2_1)
			{ after(grammarAccess.getFieldAccess().getDataDimAssignment_2_1()); }
		)
		(
			{ before(grammarAccess.getFieldAccess().getDataDimAssignment_2_1()); }
			(rule__Field__DataDimAssignment_2_1)*
			{ after(grammarAccess.getFieldAccess().getDataDimAssignment_2_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefsToAsliceAssignment_4_0_0()); }
		(rule__Field__RefsToAsliceAssignment_4_0_0)
		{ after(grammarAccess.getFieldAccess().getRefsToAsliceAssignment_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getRefsToOneAssignment_4_0_1()); }
		(rule__Field__RefsToOneAssignment_4_0_1)
		{ after(grammarAccess.getFieldAccess().getRefsToOneAssignment_4_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getRefsToManyAssignment_4_0_2()); }
		(rule__Field__RefsToManyAssignment_4_0_2)
		{ after(grammarAccess.getFieldAccess().getRefsToManyAssignment_4_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getRefsToManySlicesAssignment_4_0_3()); }
		(rule__Field__RefsToManySlicesAssignment_4_0_3)
		{ after(grammarAccess.getFieldAccess().getRefsToManySlicesAssignment_4_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getPrimitiveTypeAssignment_0_0()); }
		(rule__GlobalField__PrimitiveTypeAssignment_0_0)
		{ after(grammarAccess.getGlobalFieldAccess().getPrimitiveTypeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalFieldAccess().getEnumerationAssignment_0_1()); }
		(rule__GlobalField__EnumerationAssignment_0_1)
		{ after(grammarAccess.getGlobalFieldAccess().getEnumerationAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimensions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionsAccess().getDefinedParserRuleCall_0()); }
		ruleDefined
		{ after(grammarAccess.getDimensionsAccess().getDefinedParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionsAccess().getNotDefinedParserRuleCall_1()); }
		ruleNotDefined
		{ after(grammarAccess.getDimensionsAccess().getNotDefinedParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimValueAssignment_0()); }
		(rule__Primary__PrimValueAssignment_0)
		{ after(grammarAccess.getPrimaryAccess().getPrimValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__PrimValueAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimValueIntDimensionsParserRuleCall_0_0_0()); }
		ruleIntDimensions
		{ after(grammarAccess.getPrimaryAccess().getPrimValueIntDimensionsParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimValueOtherTableFieldParserRuleCall_0_0_1()); }
		ruleOtherTableField
		{ after(grammarAccess.getPrimaryAccess().getPrimValueOtherTableFieldParserRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimValueFieldDimensionsParserRuleCall_0_0_2()); }
		ruleFieldDimensions
		{ after(grammarAccess.getPrimaryAccess().getPrimValueFieldDimensionsParserRuleCall_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDocAssignment_0()); }
	(rule__Model__DocAssignment_0)?
	{ after(grammarAccess.getModelAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageKeyword_1()); }
	'package'
	{ after(grammarAccess.getModelAccess().getPackageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_2()); }
	(rule__Model__NameAssignment_2)
	{ after(grammarAccess.getModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementAssignment_3()); }
	(rule__Model__ElementAssignment_3)
	{ after(grammarAccess.getModelAccess().getElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getDocAssignment_0()); }
	(rule__Table__DocAssignment_0)?
	{ after(grammarAccess.getTableAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_1()); }
	'table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_2()); }
	(rule__Table__NameAssignment_2)
	{ after(grammarAccess.getTableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_4()); }
	(rule__Table__Group_4__0)
	{ after(grammarAccess.getTableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5()); }
	(rule__Table__Group_5__0)?
	{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_6()); }
	(rule__Table__Group_6__0)?
	{ after(grammarAccess.getTableAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__7__Impl
	rule__Table__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_7()); }
	(rule__Table__Group_7__0)?
	{ after(grammarAccess.getTableAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__0__Impl
	rule__Table__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getKeyLevelAssignment_4_0()); }
	(rule__Table__KeyLevelAssignment_4_0)
	{ after(grammarAccess.getTableAccess().getKeyLevelAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__1__Impl
	rule__Table__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getTableAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getKeyDataAssignment_4_2()); }
	(rule__Table__KeyDataAssignment_4_2)*
	{ after(grammarAccess.getTableAccess().getKeyDataAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__0__Impl
	rule__Table__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getReqLevelAssignment_5_0()); }
	(rule__Table__ReqLevelAssignment_5_0)?
	{ after(grammarAccess.getTableAccess().getReqLevelAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__1__Impl
	rule__Table__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getTableAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getReqDataAssignment_5_2()); }
	(rule__Table__ReqDataAssignment_5_2)*
	{ after(grammarAccess.getTableAccess().getReqDataAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__0__Impl
	rule__Table__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getOptLevelAssignment_6_0()); }
	(rule__Table__OptLevelAssignment_6_0)?
	{ after(grammarAccess.getTableAccess().getOptLevelAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__1__Impl
	rule__Table__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColonKeyword_6_1()); }
	':'
	{ after(grammarAccess.getTableAccess().getColonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getOptDataAssignment_6_2()); }
	(rule__Table__OptDataAssignment_6_2)*
	{ after(grammarAccess.getTableAccess().getOptDataAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__0__Impl
	rule__Table__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGlobalLevelAssignment_7_0()); }
	(rule__Table__GlobalLevelAssignment_7_0)?
	{ after(grammarAccess.getTableAccess().getGlobalLevelAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__1__Impl
	rule__Table__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColonKeyword_7_1()); }
	':'
	{ after(grammarAccess.getTableAccess().getColonKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGlobalDataAssignment_7_2()); }
	(rule__Table__GlobalDataAssignment_7_2)*
	{ after(grammarAccess.getTableAccess().getGlobalDataAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAlternatives_0()); }
	(rule__Field__Alternatives_0)
	{ after(grammarAccess.getFieldAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAlternatives_2()); }
	(rule__Field__Alternatives_2)
	{ after(grammarAccess.getFieldAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAutoIncrementableAssignment_3()); }
	(rule__Field__AutoIncrementableAssignment_3)?
	{ after(grammarAccess.getFieldAccess().getAutoIncrementableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getGroup_4()); }
	(rule__Field__Group_4__0)?
	{ after(grammarAccess.getFieldAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getDocAssignment_5()); }
	(rule__Field__DocAssignment_5)?
	{ after(grammarAccess.getFieldAccess().getDocAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_4__0__Impl
	rule__Field__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAlternatives_4_0()); }
	(rule__Field__Alternatives_4_0)
	{ after(grammarAccess.getFieldAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_4__1__Impl
	rule__Field__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRefersToAssignment_4_1()); }
	(rule__Field__RefersToAssignment_4_1)
	{ after(grammarAccess.getFieldAccess().getRefersToAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getGroup_4_2()); }
	(rule__Field__Group_4_2__0)?
	{ after(grammarAccess.getFieldAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_4_2__0__Impl
	rule__Field__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getVerticalLineKeyword_4_2_0()); }
	'|'
	{ after(grammarAccess.getFieldAccess().getVerticalLineKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRefersTo2Assignment_4_2_1()); }
	(rule__Field__RefersTo2Assignment_4_2_1)
	{ after(grammarAccess.getFieldAccess().getRefersTo2Assignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalField__Group__0__Impl
	rule__GlobalField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFieldAccess().getAlternatives_0()); }
	(rule__GlobalField__Alternatives_0)
	{ after(grammarAccess.getGlobalFieldAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalField__Group__1__Impl
	rule__GlobalField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFieldAccess().getNameAssignment_1()); }
	(rule__GlobalField__NameAssignment_1)
	{ after(grammarAccess.getGlobalFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalField__Group__2__Impl
	rule__GlobalField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFieldAccess().getReadOnlyAssignment_2()); }
	(rule__GlobalField__ReadOnlyAssignment_2)?
	{ after(grammarAccess.getGlobalFieldAccess().getReadOnlyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalField__Group__3__Impl
	rule__GlobalField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFieldAccess().getInitValueAssignment_3()); }
	(rule__GlobalField__InitValueAssignment_3)
	{ after(grammarAccess.getGlobalFieldAccess().getInitValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalField__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalFieldAccess().getDocAssignment_4()); }
	(rule__GlobalField__DocAssignment_4)?
	{ after(grammarAccess.getGlobalFieldAccess().getDocAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotDefined__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotDefined__Group__0__Impl
	rule__NotDefined__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotDefinedAccess().getObjAssignment_0()); }
	(rule__NotDefined__ObjAssignment_0)
	{ after(grammarAccess.getNotDefinedAccess().getObjAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotDefined__Group__1__Impl
	rule__NotDefined__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotDefinedAccess().getWSTerminalRuleCall_1()); }
	(RULE_WS)*
	{ after(grammarAccess.getNotDefinedAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotDefined__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotDefinedAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getNotDefinedAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Defined__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Defined__Group__0__Impl
	rule__Defined__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getDefinedAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Defined__Group__1__Impl
	rule__Defined__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedAccess().getDataDimValueAssignment_1()); }
	(rule__Defined__DataDimValueAssignment_1)
	{ after(grammarAccess.getDefinedAccess().getDataDimValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Defined__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinedAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getDefinedAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OtherTableField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherTableField__Group__0__Impl
	rule__OtherTableField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherTableFieldAccess().getNameAssignment_0()); }
	(rule__OtherTableField__NameAssignment_0)
	{ after(grammarAccess.getOtherTableFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherTableField__Group__1__Impl
	rule__OtherTableField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherTableFieldAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getOtherTableFieldAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherTableField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherTableFieldAccess().getFieldNameAssignment_2()); }
	(rule__OtherTableField__FieldNameAssignment_2)
	{ after(grammarAccess.getOtherTableFieldAccess().getFieldNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAddValueAssignment_0()); }
	(rule__Addition__AddValueAssignment_0)
	{ after(grammarAccess.getAdditionAccess().getAddValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getOpAssignment_1_0()); }
	(rule__Addition__OpAssignment_1_0)
	{ after(grammarAccess.getAdditionAccess().getOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAddValueAssignment_1_1()); }
	(rule__Addition__AddValueAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getAddValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultValueAssignment_0()); }
	(rule__Multiplication__MultValueAssignment_0)
	{ after(grammarAccess.getMultiplicationAccess().getMultValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0()); }
	(rule__Multiplication__OpAssignment_1_0)
	{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultValueAssignment_1_1()); }
	(rule__Multiplication__MultValueAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getMultValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPrimAddValueAssignment_1_1()); }
	(rule__Primary__PrimAddValueAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getPrimAddValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getModelAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getModelAccess().getElementTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getTableAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__KeyLevelAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getKeyLevelKeyKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getTableAccess().getKeyLevelKeyKeyword_4_0_0()); }
			'Key'
			{ after(grammarAccess.getTableAccess().getKeyLevelKeyKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getTableAccess().getKeyLevelKeyKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__KeyDataAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getKeyDataFieldParserRuleCall_4_2_0()); }
		ruleField
		{ after(grammarAccess.getTableAccess().getKeyDataFieldParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ReqLevelAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getReqLevelRequiredDataKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getTableAccess().getReqLevelRequiredDataKeyword_5_0_0()); }
			'Required Data'
			{ after(grammarAccess.getTableAccess().getReqLevelRequiredDataKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getTableAccess().getReqLevelRequiredDataKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ReqDataAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getReqDataFieldParserRuleCall_5_2_0()); }
		ruleField
		{ after(grammarAccess.getTableAccess().getReqDataFieldParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__OptLevelAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getOptLevelOptionalDataKeyword_6_0_0()); }
		(
			{ before(grammarAccess.getTableAccess().getOptLevelOptionalDataKeyword_6_0_0()); }
			'Optional Data'
			{ after(grammarAccess.getTableAccess().getOptLevelOptionalDataKeyword_6_0_0()); }
		)
		{ after(grammarAccess.getTableAccess().getOptLevelOptionalDataKeyword_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__OptDataAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getOptDataFieldParserRuleCall_6_2_0()); }
		ruleField
		{ after(grammarAccess.getTableAccess().getOptDataFieldParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__GlobalLevelAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getGlobalLevelGlobalDataKeyword_7_0_0()); }
		(
			{ before(grammarAccess.getTableAccess().getGlobalLevelGlobalDataKeyword_7_0_0()); }
			'Global Data'
			{ after(grammarAccess.getTableAccess().getGlobalLevelGlobalDataKeyword_7_0_0()); }
		)
		{ after(grammarAccess.getTableAccess().getGlobalLevelGlobalDataKeyword_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__GlobalDataAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getGlobalDataGlobalFieldParserRuleCall_7_2_0()); }
		ruleGlobalField
		{ after(grammarAccess.getTableAccess().getGlobalDataGlobalFieldParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__PrimitiveTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getPrimitiveTypePrimitiveTypesParserRuleCall_0_0_0()); }
		rulePrimitiveTypes
		{ after(grammarAccess.getFieldAccess().getPrimitiveTypePrimitiveTypesParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__EnumerationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getEnumerationEnumTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getEnumerationEnumTypeIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldAccess().getEnumerationEnumTypeIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getEnumerationEnumTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ScalarAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getScalarScalarKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getScalarScalarKeyword_2_0_0()); }
			'scalar'
			{ after(grammarAccess.getFieldAccess().getScalarScalarKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getScalarScalarKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__DataDimAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getDataDimDimensionsParserRuleCall_2_1_0()); }
		ruleDimensions
		{ after(grammarAccess.getFieldAccess().getDataDimDimensionsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__AutoIncrementableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getAutoIncrementableAutoIncrementableKeyword_3_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getAutoIncrementableAutoIncrementableKeyword_3_0()); }
			'autoIncrementable'
			{ after(grammarAccess.getFieldAccess().getAutoIncrementableAutoIncrementableKeyword_3_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getAutoIncrementableAutoIncrementableKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefsToAsliceAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefsToAsliceRefersToASliceKeyword_4_0_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getRefsToAsliceRefersToASliceKeyword_4_0_0_0()); }
			'refersToASlice'
			{ after(grammarAccess.getFieldAccess().getRefsToAsliceRefersToASliceKeyword_4_0_0_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getRefsToAsliceRefersToASliceKeyword_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefsToOneAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefsToOneRefersToOneKeyword_4_0_1_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getRefsToOneRefersToOneKeyword_4_0_1_0()); }
			'refersToOne'
			{ after(grammarAccess.getFieldAccess().getRefsToOneRefersToOneKeyword_4_0_1_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getRefsToOneRefersToOneKeyword_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefsToManyAssignment_4_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefsToManyRefersToManyKeyword_4_0_2_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getRefsToManyRefersToManyKeyword_4_0_2_0()); }
			'refersToMany'
			{ after(grammarAccess.getFieldAccess().getRefsToManyRefersToManyKeyword_4_0_2_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getRefsToManyRefersToManyKeyword_4_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefsToManySlicesAssignment_4_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefsToManySlicesRefersToManySlicesKeyword_4_0_3_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getRefsToManySlicesRefersToManySlicesKeyword_4_0_3_0()); }
			'refersToManySlices'
			{ after(grammarAccess.getFieldAccess().getRefsToManySlicesRefersToManySlicesKeyword_4_0_3_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getRefsToManySlicesRefersToManySlicesKeyword_4_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefersToAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefersToIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getRefersToIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RefersTo2Assignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRefersTo2IDTerminalRuleCall_4_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getRefersTo2IDTerminalRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__DocAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getDocML_COMMENTTerminalRuleCall_5_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getFieldAccess().getDocML_COMMENTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__PrimitiveTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getPrimitiveTypePrimitiveTypesParserRuleCall_0_0_0()); }
		rulePrimitiveTypes
		{ after(grammarAccess.getGlobalFieldAccess().getPrimitiveTypePrimitiveTypesParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__EnumerationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getEnumerationEnumTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getGlobalFieldAccess().getEnumerationEnumTypeIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGlobalFieldAccess().getEnumerationEnumTypeIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getGlobalFieldAccess().getEnumerationEnumTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__ReadOnlyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getReadOnlyReadOnlyKeyword_2_0()); }
		(
			{ before(grammarAccess.getGlobalFieldAccess().getReadOnlyReadOnlyKeyword_2_0()); }
			'readOnly'
			{ after(grammarAccess.getGlobalFieldAccess().getReadOnlyReadOnlyKeyword_2_0()); }
		)
		{ after(grammarAccess.getGlobalFieldAccess().getReadOnlyReadOnlyKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__InitValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getInitValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getGlobalFieldAccess().getInitValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalField__DocAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalFieldAccess().getDocML_COMMENTTerminalRuleCall_4_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getGlobalFieldAccess().getDocML_COMMENTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotDefined__ObjAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotDefinedAccess().getObjLeftSquareBracketKeyword_0_0()); }
		(
			{ before(grammarAccess.getNotDefinedAccess().getObjLeftSquareBracketKeyword_0_0()); }
			'['
			{ after(grammarAccess.getNotDefinedAccess().getObjLeftSquareBracketKeyword_0_0()); }
		)
		{ after(grammarAccess.getNotDefinedAccess().getObjLeftSquareBracketKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Defined__DataDimValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedAccess().getDataDimValueAdditionParserRuleCall_1_0()); }
		ruleAddition
		{ after(grammarAccess.getDefinedAccess().getDataDimValueAdditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDimensions__DimValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDimensionsAccess().getDimValueFieldCrossReference_0()); }
		(
			{ before(grammarAccess.getFieldDimensionsAccess().getDimValueFieldIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldDimensionsAccess().getDimValueFieldIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFieldDimensionsAccess().getDimValueFieldCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherTableFieldAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOtherTableFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherTableField__FieldNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherTableFieldAccess().getFieldNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOtherTableFieldAccess().getFieldNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntDimensions__DimValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntDimensionsAccess().getDimValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntDimensionsAccess().getDimValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__AddValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getAddValueMultiplicationParserRuleCall_0_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getAddValueMultiplicationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__OpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_0()); }
		(rule__Addition__OpAlternatives_1_0_0)
		{ after(grammarAccess.getAdditionAccess().getOpAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__AddValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getAddValueMultiplicationParserRuleCall_1_1_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getAddValueMultiplicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__MultValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getMultValuePrimaryParserRuleCall_0_0()); }
		rulePrimary
		{ after(grammarAccess.getMultiplicationAccess().getMultValuePrimaryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_0()); }
		(rule__Multiplication__OpAlternatives_1_0_0)
		{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__MultValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getMultValuePrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMultiplicationAccess().getMultValuePrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__PrimValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimValueAlternatives_0_0()); }
		(rule__Primary__PrimValueAlternatives_0_0)
		{ after(grammarAccess.getPrimaryAccess().getPrimValueAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__PrimAddValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimAddValueAdditionParserRuleCall_1_1_0()); }
		ruleAddition
		{ after(grammarAccess.getPrimaryAccess().getPrimAddValueAdditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
