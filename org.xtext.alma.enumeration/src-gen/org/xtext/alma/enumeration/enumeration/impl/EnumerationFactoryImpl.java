/**
 * generated by Xtext 2.9.1
 */
package org.xtext.alma.enumeration.enumeration.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.alma.enumeration.enumeration.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EnumerationFactoryImpl extends EFactoryImpl implements EnumerationFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static EnumerationFactory init()
  {
    try
    {
      EnumerationFactory theEnumerationFactory = (EnumerationFactory)EPackage.Registry.INSTANCE.getEFactory(EnumerationPackage.eNS_URI);
      if (theEnumerationFactory != null)
      {
        return theEnumerationFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new EnumerationFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumerationFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case EnumerationPackage.ENUM_TYPE: return createEnumType();
      case EnumerationPackage.ENUM_VALUE_WITHOUT_COMMA: return createEnumValueWithoutComma();
      case EnumerationPackage.ENUM_VALUE: return createEnumValue();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumType createEnumType()
  {
    EnumTypeImpl enumType = new EnumTypeImpl();
    return enumType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumValueWithoutComma createEnumValueWithoutComma()
  {
    EnumValueWithoutCommaImpl enumValueWithoutComma = new EnumValueWithoutCommaImpl();
    return enumValueWithoutComma;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumValue createEnumValue()
  {
    EnumValueImpl enumValue = new EnumValueImpl();
    return enumValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumerationPackage getEnumerationPackage()
  {
    return (EnumerationPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static EnumerationPackage getPackage()
  {
    return EnumerationPackage.eINSTANCE;
  }

} //EnumerationFactoryImpl
