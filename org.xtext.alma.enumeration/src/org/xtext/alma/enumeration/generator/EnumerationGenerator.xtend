/*
 * generated by Xtext 2.9.1
 */
package org.xtext.alma.enumeration.generator

import org.eclipse.emf.common.util.EList
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.alma.enumeration.generator.enumfilesystem.EnumerationFileSystemAccess

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class EnumerationGenerator extends EnumerationAbstractGenerator {

	override doGenerate(EList<Resource> input, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		
		
		//generation of Java code
		Main.logger.info("Starting Java code generation!")
		new JAVAGenerator().doGenerate(input,fsa,context)
		Main.logger.info("Java code generation finished!")
		
		
		//generation of IDL file
		Main.logger.info("Starting IDL code generation!")
		new IDLGenerator().doGenerate(input,fsa,context)
		Main.logger.info("IDL code generation finished!")
		
		
		//generation of CPP Header files
		Main.logger.info("Starting CPP Header generation!")
		new CPPHeaderGenerator().doGenerate(input,fsa,context)
		Main.logger.info("CPP Header finished!")
			
			
		//generation of CPP class files
		Main.logger.info("Starting CPP Class generation!")
		new CPPClassGenerator().doGenerate(input,fsa,context)
		Main.logger.info("CPP Class generation finished!")
		
		
		//generation of Twiki documentation 
		Main.logger.info("Starting Twiki generation")
		new TwikiGenerator().doGenerate(input,fsa,context);
		Main.logger.info("Twiki generation finished!")
		
		
		//generation of FModule
		Main.logger.info("Starting F90 generation")
		new F90Generator().doGenerate(input,fsa,context);
		Main.logger.info("F90 generation finished!")
		
		
		//generation of Latex documentation
		Main.logger.info("Starting Latex generation")
		new LatexGenerator().doGenerate(input,fsa,context);
		Main.logger.info("CPP Class generation finished!")
		
		// generation of XSD files (XML Schematas) 
		Main.logger.info("Starting XSD generation")
		new XSDGenerator().doGenerate(input, fsa, context);
		Main.logger.info("XSD generation finished!")
		
		//generation of PostgreSQL 
		Main.logger.info("Starting PostgreSQL generation")
		new PostgreSQLGenerator().doGenerate(input,fsa,context);
		Main.logger.info("PostgreSQL generation finished!\n")
		
		
		//generation of SQL 
		Main.logger.info("Starting SQL generation")
		new SQLGenerator().doGenerate(input,fsa,context);
		Main.logger.info("SQL generation finished!\n")
		
		
		//generation of Python code 
		Main.logger.info("Starting Python generation")
		new PythonGenerator().doGenerate(input,fsa,context);
		Main.logger.info("Python generation finished!\n")
		
		
	}
	
	override doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if(fsa instanceof EnumerationFileSystemAccess){
			
		}else{
			Main.logger.info("code generation not supported for eclipse application!!!")
			/* TODO : eclipse application version */
		}
	}
	
	
	
}
